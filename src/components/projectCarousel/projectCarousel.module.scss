// ProjectCarousel.module.scss
@use '../../styles/variables.module.scss' as *;
@use 'sass:color';

// ===================================
// Container and Wrapper Styles
// ===================================

.carouselWrapper {
  width: 100%;
  overflow: hidden;
  position: relative;
}

.carouselContainer {
  display: flex;
  flex-wrap: nowrap;
  gap: 2rem;
  overflow-x: scroll;
  scroll-behavior: smooth;
  -ms-overflow-style: none; // Hide scrollbar for IE/Edge
  scrollbar-width: none; // Hide scrollbar for Firefox
  user-select: none;
  scroll-snap-type: x mandatory;
  -webkit-overflow-scrolling: touch; // Smooth scrolling on iOS
  padding: 1rem;

  // Hide scrollbar for Chrome/Safari/Opera
  &::-webkit-scrollbar {
    display: none;
  }
}

// ===================================
// Carousel Item Styles
// ===================================

.carouselItem {
  flex: 0 0 auto;
  width: 50%;
  max-width: 750px;
  background: rgba(255, 255, 255, 0);
  border-radius: 12px;
  text-align: center;
  font-size: 1.2rem;
  scroll-snap-align: center;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  box-sizing: border-box;
  cursor: pointer;

  // Responsive width adjustment
  @media (max-width: 1200px) {
    width: 90%;
  }

  // Active state - slightly scaled
  &[aria-selected='true'] {
    transform: scale(1.04);
  }

  // Hover effect for desktop
  @media (hover: hover) {
    &:hover {
      transform: scale(1.04);
    }
  }

  // Enhanced focus styles using primary color
  &:focus {
    outline: $focus-color;
    outline-offset: 4px;
    box-shadow: 0 0 0 4px color.adjust($primary, $alpha: -0.9);
  }

  // Remove focus styles for mouse users
  &:focus:not(:focus-visible) {
    outline: none;
    box-shadow: none;
  }

  // Keyboard-only focus styles
  &:focus-visible {
    outline: $focus-color;
    outline-offset: 4px;
    box-shadow: 0 0 0 4px color.adjust($primary, $alpha: -0.9);
  }
}

// ===================================
// Navigation Components
// ===================================

.navigationWrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 20px;
  margin: 0.5rem 0;
  position: relative;

  // Responsive gap adjustments
  @media (max-width: 768px) {
    gap: 12px;
  }

  @media (max-width: 480px) {
    gap: 8px;
  }
}

.navigationBar {
  background: white;
  border-radius: 24px;
  padding: 4px;
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
  display: inline-flex;
  align-items: center;
  gap: 12px;
  margin-top: 0.2rem;
}

// ===================================
// Arrow Button Styles
// ===================================

.arrowButton {
  background: white;
  border: 1px solid #e0e0e0;
  border-radius: 50%;
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  color: #333;
  flex-shrink: 0;

  // Hover state
  &:hover:not(:disabled) {
    background: #f5f5f5;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transform: scale(1.1);
  }

  // Active/pressed state
  &:active:not(:disabled) {
    transform: scale(0.95);
  }

  // Disabled state
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  // Hidden state with fade animation
  &.hidden {
    opacity: 0;
    pointer-events: none;
    animation: fadeOut 0.3s ease;
  }

  // Visible state with fade animation
  &:not(.hidden) {
    animation: fadeIn 0.3s ease;
  }

  // Focus styles using primary color
  &:focus {
    outline: 2px solid color.adjust($primary, $lightness: -5%);
    outline-offset: 2px;
  }

  // Remove focus for mouse users
  &:focus:not(:focus-visible) {
    outline: none;
  }

  // Icon sizing
  svg {
    width: 16px;
    height: 16px;
  }

  // Responsive sizing
  @media (max-width: 768px) {
    width: 32px;
    height: 32px;

    svg {
      width: 14px;
      height: 14px;
    }
  }

  @media (max-width: 480px) {
    width: 28px;
    height: 28px;

    svg {
      width: 12px;
      height: 12px;
    }
  }
}

// Navigation bar specific arrow button styles
.navigationBar .arrowButton {
  box-shadow: none;
  border: none;
  background: transparent;

  &:hover {
    background: #f5f5f5;
  }
}

// Hidden state utility
.hidden {
  opacity: 0;
  pointer-events: none;
  animation: fadeOut 0.3s ease;
}

// ===================================
// Carousel Indicators (Dots)
// ===================================

.carouselIndicator {
  display: flex;
  justify-content: center;
  gap: 8px;
}

.dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  border: none;
  background: #ccc;
  cursor: pointer;
  transition: all 0.2s;

  // Active dot using primary color
  &.active {
    background-color: $primary;
    transform: scale(1.2);
  }

  // Hover state
  &:hover {
    background-color: #999;
  }

  // Focus styles using primary color
  &:focus {
    outline: 2px solid $primary;
    outline-offset: 2px;
  }

  // Remove focus for mouse users
  &:focus:not(:focus-visible) {
    outline: none;
  }
}

// Active state class
.active {
  background-color: $primary;
}

// ===================================
// Modal Styles
// ===================================

.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease, visibility 0.3s ease;
}

// Modal open state
.modalOpen {
  opacity: 1;
  visibility: visible;
}

// Modal content wrapper
.modalContent {
  position: relative;
  animation: modalZoomIn 0.4s ease;
}

// Modal card container
.modalCard {
  background: white;
  border-radius: 16px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  max-width: 50vw;
  max-height: 80vh;
  overflow: auto;
  transform-origin: center;
  animation: bounceIn 0.5s ease;

  // Responsive sizing
  @media (max-width: 1050px) {
    max-width: 85vw;
  }
}

// Modal close button
.closeButton {
  position: absolute;
  top: 0;
  right: -50px;
  width: 40px;
  height: 40px;
  background: linear-gradient(180deg, #ffffff 0%, $primary 600%);
  border: none;
  border-radius: 50%;
  font-size: 24px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.2s ease;
  z-index: 1;

  // Hover effect
  &:hover {
    transform: scale(1.1);
  }

  // Focus style using primary color
  &:focus {
    outline: $focus-color;
    outline-offset: 2px;
    box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.3);
  }

  // Mobile styles
  @media (max-width: 768px) {
    top: 20px;
    right: 20px;
    width: 30px;
    height: 30px;
    font-size: 20px;
    background: rgba(0, 0, 0, 0.3);
    color: white;
  }
}

// ===================================
// Animations
// ===================================

// Fade in animation
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

// Fade out animation
@keyframes fadeOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.8);
  }
}

// Card focus animation
@keyframes cardFocus {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1.03);
  }
}

// Modal zoom in animation
@keyframes modalZoomIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

// Bounce in animation for modal card
@keyframes bounceIn {
  0% {
    transform: scale(0.9);
    opacity: 0;
  }
  50% {
    transform: scale(1.03);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

// Slide up animation (unused but available)
@keyframes slideUp {
  from {
    transform: translateY(100vh);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

// Fade in with rotation animation (unused but available)
@keyframes fadeInRotate {
  from {
    transform: scale(0.8) rotate(-5deg);
    opacity: 0;
  }
  to {
    transform: scale(1) rotate(0deg);
    opacity: 1;
  }
}
