// Import design system variables
@use '../../styles/variables.module.scss' as *;
@use 'sass:color';

// Main wrapper for centering content
.gameMenuWrapper {
  position: relative;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;

  // Mobile: align content to top
  @media (max-width: 480px) {
    align-items: flex-start;
  }
}

// Main game menu container
.gameMenu {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: start;
  gap: 2rem;
  text-align: center;
  padding: 2rem;
  width: 100%;
  max-width: 800px;

  // Tablet styles
  @media (max-width: 768px) {
    padding: 2rem;
    gap: 1.5rem;
  }

  // Mobile styles
  @media (max-width: 480px) {
    padding: 0;
    gap: 0.5rem;
    width: 85%;
  }

  // Instructions list
  ul {
    text-align: left;
    margin: 0 0 1.5rem 0;
    padding: 0;
    max-width: 600px;
    width: 100%;
    list-style: none;

    @media (max-width: 480px) {
      margin-bottom: 0;
    }

    li {
      // Fluid typography using clamp
      font-size: clamp(0.875rem, 2vw, 1.125rem);
      line-height: 1.6;
      color: #333;
      margin-bottom: 0.75rem;
      padding-left: 1.5rem;
      position: relative;

      // Custom bullet point
      &::before {
        content: 'â€¢';
        position: absolute;
        left: 0;
        color: color.adjust($primary, $lightness: -20%);
        font-weight: bold;
        font-size: 1.2em;
      }

      strong {
        color: black;
        display: inline-block;
        margin-right: 0.25rem;
      }

      @media (max-width: 480px) {
        padding-left: 1rem;
        margin-bottom: 0.5rem;
      }
    }
  }
}

// Game cards grid container
.gameButtons {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 1.5rem;
  width: 100%;

  // Stack cards on tablet and below
  @media (max-width: 768px) {
    grid-template-columns: 1fr;
    gap: 0.5rem;
  }
}

// Individual game card styling
.gameCard {
  min-height: 200px;
  padding: 1.5rem;
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.95);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px); // Glassmorphism effect
  transition: all 0.3s ease;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  border: 1px solid rgba(0, 0, 0, 0.1);

  @media (max-width: 480px) {
    min-height: auto;
    padding: 0.5rem;
  }

  // Hover effect for devices with hover capability
  @media (hover: hover) {
    &:hover {
      transform: translateY(-4px);
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
    }
  }

  h3 {
    color: #333;
    font-size: clamp(1.1rem, 3vw, 1.3rem);
    margin: 0 0 0.5rem 0;
  }

  p {
    color: #666;
    font-size: clamp(0.875rem, 2vw, 1rem);
    line-height: 1.5;
    margin: 0 0 0.5rem 0;
    flex-grow: 1; // Push button to bottom
  }
}

// Game start button
.gameButton {
  // Gradient using primary color variable
  background: linear-gradient(135deg, rgba($primary, 0.5) 0%, $primary 100%);
  color: white;
  border: none;
  padding: 0.875rem 1.5rem;
  border-radius: 8px;
  font-size: clamp(0.875rem, 2.5vw, 1rem);
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  width: 100%;
  position: relative;
  overflow: hidden;
  will-change: transform; // Optimize for animations

  @media (max-width: 480px) {
    padding: 0.75rem 1rem;
  }

  // Animated shine effect
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: left 0.5s;
  }

  // Hover state for devices with hover capability
  @media (hover: hover) {
    &:hover:not(:disabled) {
      background: linear-gradient(
        135deg,
        rgba($primary, 0.7) 0%,
        color.adjust($primary, $lightness: -10%) 100%
          // Remplace darken($primary, 10%)
      );
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba($primary, 0.4);

      // Trigger shine animation
      &::before {
        left: 100%;
      }
    }
  }

  // Active/pressed state
  &:active:not(:disabled) {
    transform: scale(0.98);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  // Focus states for accessibility
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($primary, 0.3);
  }

  &:focus-visible {
    outline: $focus-color; // Using variable from design system
    outline-offset: 2px;
  }

  // Disabled state styling
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background: linear-gradient(
      135deg,
      rgba($primary, 0.3) 0%,
      rgba($primary, 0.7) 100%
    );

    // Remove shine effect when disabled
    &::before {
      display: none;
    }
  }
}

// Landscape orientation handling for mobile devices
@media (max-width: 768px) and (orientation: landscape) {
  .gameMenu {
    padding: 1rem;
    gap: 0.5rem;
  }

  .gameButtons {
    grid-template-columns: repeat(2, 1fr); // Side by side in landscape
    gap: 1rem;
  }

  .gameCard {
    min-height: auto;
    padding: 0.75rem;

    h3 {
      font-size: 1rem;
    }

    p {
      font-size: 0.875rem;
      margin: 0.25rem 0 0.5rem 0;
    }
  }

  .gameButton {
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
  }
}

// Support for very small screens
@media (max-width: 320px) {
  .gameMenu {
    padding: 0.75rem;
  }

  .gameCard {
    padding: 0.75rem;

    h3 {
      font-size: 1rem;
    }

    p {
      font-size: 0.8rem;
    }
  }

  .gameButton {
    font-size: 0.8rem;
    padding: 0.6rem 0.8rem;
  }
}
