// components/navigationArrows.module.scss
@use '../../styles/variables.module' as *;
@use 'sass:color';

// Base arrow button styles
.arrow {
  // Dimensions
  width: 45px;
  height: 45px;

  // Shape and appearance
  border-radius: 50%;
  border: 2px solid rgba(255, 255, 255, 0.3);
  background: rgba(0, 0, 0, 0.05);
  color: white;

  // Interaction
  cursor: pointer;
  transition: all 0.3s ease;

  // Layout
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;

  // SVG icon styles
  svg {
    width: 40px;
    height: 40px;
    transition: transform 0.3s ease;
  }

  // Hover state (when not disabled)
  &:hover:not(.disabled) {
    background: rgba(0, 0, 0, 0.5);
    border-color: rgba(255, 255, 255, 0.6);
    transform: scale(1.1);
  }

  // Specific hover effect for up arrow
  &.up:hover:not(.disabled) svg {
    transform: translateY(-2px);
  }

  // Specific hover effect for down arrow
  &.down:hover:not(.disabled) svg {
    transform: translateY(2px);
  }

  // Active/click state
  &:active:not(.disabled) {
    transform: scale(0.95);
  }

  // Focus state for accessibility
  &:focus-visible {
    outline: $focus-color;
    outline-offset: 2px;
  }

  // Disabled state
  &.disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  // Navigating state with pulse animation
  &.navigating {
    animation: pulse 0.8s;
  }

  // Ripple effect on click
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba($wave-color, 0.4);
    transform: translate(-50%, -50%);
    transition: width 0.6s, height 0.6s;
  }

  // Expand ripple on active state
  &:active:not(.disabled)::before {
    width: 100px;
    height: 100px;
  }

  // Mobile responsive styles
  @media (max-width: 768px) {
    width: 35px;
    height: 35px;

    svg {
      width: 20px;
      height: 20px;
    }
  }
}

// Pulse animation for navigating state
@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba($primary, 0.4);
  }
  70% {
    box-shadow: 0 0 0 15px rgba($primary, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba($primary, 0);
  }
}

// Style variants

// Minimal style variant
.minimal {
  background: transparent;
  border: 2px solid #ddd;
  color: #666;

  &:hover:not(.disabled) {
    border-color: #333;
    color: #000;
    background: rgba(0, 0, 0, 0.05);
  }
}

// Primary style variant using primary color
.primary {
  background: $primary;
  border-color: $primary;

  &:hover:not(.disabled) {
    // Using color.adjust to darken the primary color by 10%
    background: color.adjust($primary, $lightness: -10%);
    box-shadow: 0 4px 12px rgba($primary, 0.3);
  }
}

// Ghost style variant
.ghost {
  background: transparent;
  border: none;
  color: rgba(255, 255, 255, 0.8);

  &:hover:not(.disabled) {
    color: white;
    background: rgba(255, 255, 255, 0.1);
  }
}
