// Import your variables
@use '../../styles/variables.module.scss' as *;

// Import Sass color module
@use 'sass:color';
@use 'sass:math';

// ========== COLOR CONFIGURATION ==========
/**
 * Particle color system based on primary color
 * Uses HSL for easy manipulation of lightness and saturation
 */

// Extract HSL values from primary using new Sass syntax
$primary-hue: color.channel($primary, 'hue', $space: hsl);
$primary-saturation: color.channel($primary, 'saturation', $space: hsl);
$primary-lightness: color.channel($primary, 'lightness', $space: hsl);

// Particle color configuration
$particle-hue-base: $primary-hue; // Base hue from primary color
$particle-hue-range: 30; // Hue variation range (+/- 15 degrees)
$particle-saturation: math.max(
  60%,
  $primary-saturation
); // Minimum 60% saturation for vibrant colors
$particle-lightness-base: 50%; // Base lightness
$particle-lightness-range: 20%; // Lightness variation

// ========== EXPORT FOR JAVASCRIPT ==========
/**
 * Export color values for use in React component
 * This allows dynamic particle generation with consistent theming
 */
:export {
  particleHueBase: #{$particle-hue-base};
  particleHueRange: #{$particle-hue-range};
  particleSaturation: #{$particle-saturation};
  particleLightnessBase: #{$particle-lightness-base};
  particleLightnessRange: #{$particle-lightness-range};
  primaryColor: #{$primary};
}

// ========== MIXINS ==========
/**
 * Centers an element using absolute positioning and transform
 */
@mixin absolute-center {
  position: absolute;
  transform: translate(-50%, -50%);
}

/**
 * GPU optimization mixin
 * Forces GPU acceleration without using will-change
 * translate3d creates a new layer, backface-visibility prevents flickering
 */
@mixin gpu-optimized {
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
}

// ========== CONTAINER ==========
/**
 * Main container for the particle system
 * Fixed positioning covers entire viewport
 * z-index -1 keeps it behind all content
 * pointer-events: none allows clicks to pass through
 */
.container {
  position: fixed;
  inset: 0; // Shorthand for top/right/bottom/left: 0
  overflow: hidden; // Hide particles that move off-screen
  z-index: -1; // Behind all other content
  pointer-events: none; // Allow interaction with content above
}

// ========== PARTICLES ==========
/**
 * Individual particle styling
 * Absolutely positioned circles with glow effects
 * Performance optimized with conditional will-change
 */
.particle {
  @include absolute-center; // Center on coordinates
  @include gpu-optimized; // Force GPU acceleration
  position: absolute;
  border-radius: 50%; // Perfect circle
  pointer-events: none; // Non-interactive

  // Performance optimization: only first 20 particles get will-change
  // This prevents GPU memory exhaustion with many particles
  &:nth-child(-n + 20) {
    will-change: transform, opacity;
  }
}
